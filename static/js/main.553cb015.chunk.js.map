{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Error.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Tv/TvPresenter.js","Routes/Tv/index.js","Routes/Tv/TvContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","Error","text","Image","props","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","tv","original_name","first_air_date","TvContainer","TvPresenter","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","SearchContainer","event","preventDefault","searchByTerm","target","a","Header","header","List","ul","Items","li","current","StyleLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","Tv","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.553cb015.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.a8bc8049.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 16px;\n  /* font-weight: 600; */\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 20px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 40px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\nexport default Loader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: #e74c3c;\n`;\n\nconst Error = ({ text }) => (\n  <Container>\n    <Text>{text}</Text>\n  </Container>\n);\n\nError.propTypes = {\n  text: PropTypes.string.isRequired\n};\nexport default Error;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        ></Image>\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n             ⭐️\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.substring(0.18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","// export default () => \"homePresenter\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Error from \"../../Components/Error\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movie | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Error text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"6923587b672ac703b431edd66bf55c85\",\n    language: \"ko-KR\"\n  }\n});\n\n// // /movie/popular \"/\" 일경우 절대경로로 오버라이트됨\n// api.get(\"movie/popular\");\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"/search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"/search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      // throw Error();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"영화정보를 가져오는데 실패했습니다\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <>\n        <HomePresenter\n          nowPlaying={nowPlaying}\n          upcoming={upcoming}\n          popular={popular}\n          error={error}\n          loading={loading}\n        />\n      </>\n    );\n  }\n}\n","// export default () => \"TvPresenter\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"TopRated TV\">\n            {topRated.map(tv => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular TV\">\n            {popular.map(tv => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"AiringToday TV\">\n            {airingToday.map(tv => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                imageUrl={tv.poster_path}\n                title={tv.original_name}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TvContainer from \"./TvContainer\";\n\nexport default TvContainer;\n","import React from \"react\";\nimport TvPresenter from \"./TvPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch {\n      this.setState({\n        error: \"Tv정보를 가져오는데 실패했습니다\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <>\n        <TvPresenter\n          topRated={topRated}\n          popular={popular}\n          airingToday={airingToday}\n          error={error}\n          loading={loading}\n        />\n      </>\n    );\n  }\n}\n","// export default () => \"SearchPresenter\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n  error\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movie or TV show...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      ></Input>\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              ></Poster>\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  // // 콘솔확인용 함수\n  // componentDidMount() {\n  //   this.handleSubmit();\n  // }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = event => {\n    // console.log(event);\n    const {\n      target: { value }\n    } = event;\n    // console.log(value);\n    this.setState({\n      searchTerm: value\n    });\n    // event.preventDefault();\n  };\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      // console.log(movieResults, tvResults);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({\n        error: \"검색된 결과가 없습니다\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    console.log(this.state);\n    return (\n      <>\n        <SearchPresenter\n          movieResults={movieResults}\n          tvResults={tvResults}\n          searchTerm={searchTerm}\n          loading={loading}\n          error={error}\n          handleSubmit={this.handleSubmit}\n          updateTerm={this.updateTerm}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Items = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst StyleLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst HeaderComponet = ({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Items current={pathname === \"/\"}>\n        <StyleLink to=\"/\">Movies</StyleLink>\n      </Items>\n      <Items current={pathname === \"/Tv\"}>\n        <StyleLink to=\"/Tv\">Tv</StyleLink>\n      </Items>\n      <Items current={pathname === \"/Search\"}>\n        <StyleLink to=\"/Search\">Search</StyleLink>\n      </Items>\n    </List>\n  </Header>\n);\n\nexport default withRouter(HeaderComponet);\n\n// export default withRouter(props => (\n//   <Header>\n//     <List>\n//       <Items current={true}>\n//         <StyleLink to=\"/\">Movies</StyleLink>\n//       </Items>\n//       <Items current={true}>\n//         <StyleLink to=\"/Tv\">Tv</StyleLink>\n//       </Items>\n//       <Items current={true}>\n//         <StyleLink to=\"/Search\">Search</StyleLink>\n//       </Items>\n//     </List>\n//   </Header>\n// ));\n","// export default () => \"DetailPresenter\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 1;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 30px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      ></Backdrop>\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        ></Cover>\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : ` ${genre.name}  / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    // 상세페이지 이동시 영화인지 쇼인지 판단하는 로직\n    const { isMovie } = this.state;\n    // this.isMovie = pathname.includes(\"/movie/\");\n    // 숫자가 아닌 스트링 쿼리 입력시 홈으로 이동하는 로직\n    const parsedId = parseInt(id);\n    // console.log(parsedId);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n      console.log(result);\n    } catch {\n      this.setState({ error: \"아무것도 찾을수가 없습니다\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    // console.log(this.state);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Tv from \"Routes/Tv\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/Tv\" component={Tv} />\n        <Route path=\"/Search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: rgba(20,20,20,1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}